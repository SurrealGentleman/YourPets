# Generated by Django 5.0.1 on 2024-03-04 13:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Breed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Порода животного')),
            ],
            options={
                'verbose_name': 'Порода животного',
                'verbose_name_plural': 'Породы животного',
            },
        ),
        migrations.CreateModel(
            name='KindOfAnimal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Вид животного')),
            ],
            options={
                'verbose_name': 'Вид животного',
                'verbose_name_plural': 'Виды животного',
            },
        ),
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True, verbose_name='Наименование цели')),
            ],
            options={
                'verbose_name': 'Цель',
                'verbose_name_plural': 'Цели',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=60, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=120, verbose_name='Фамилия')),
                ('connect', models.CharField(max_length=160, verbose_name='Контактные данные')),
                ('email', models.CharField(max_length=120, unique=True, verbose_name='E-mail')),
                ('password', models.CharField(max_length=60, verbose_name='Пароль')),
                ('sub', models.BooleanField(default=False, verbose_name='Подписка')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователь',
                'ordering': ['last_name', 'first_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AnimalCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Кличка')),
                ('birth', models.DateField(verbose_name='Дата рождения')),
                ('gender', models.BooleanField(default=False, verbose_name='Пол')),
                ('color', models.CharField(max_length=60, verbose_name='Окрас')),
                ('search', models.BooleanField(default=False, verbose_name='Поиск')),
                ('photo', models.ImageField(upload_to='images/pets/', verbose_name='Фото')),
                ('comment', models.CharField(max_length=100)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Хозяин')),
                ('breed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.breed', verbose_name='Порода')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.mission', verbose_name='Цель')),
            ],
            options={
                'verbose_name': 'Карточка животного',
                'verbose_name_plural': 'Карточки животного',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Наименование события')),
                ('color', models.CharField(max_length=30, unique=True, verbose_name='Цвет')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'Событие',
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Дата')),
                ('comment', models.CharField(max_length=100, verbose_name='Комментарий')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.animalcard', verbose_name='Питомец')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.event', verbose_name='Событие')),
            ],
            options={
                'verbose_name': 'Календарь',
                'verbose_name_plural': 'Календарь',
            },
        ),
        migrations.AddField(
            model_name='breed',
            name='kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.kindofanimal', verbose_name='Вид животного'),
        ),
        migrations.CreateModel(
            name='AdviceCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(blank=True, max_length=60, null=True, verbose_name='Окрас')),
                ('gender', models.BooleanField(default=False, null=True, verbose_name='Пол')),
                ('lower_age', models.IntegerField(blank=True, null=True, verbose_name='Нижний диапазон')),
                ('upper_age', models.IntegerField(blank=True, null=True, verbose_name='Верхний диапазон')),
                ('content', models.CharField(max_length=230, verbose_name='Содержание')),
                ('breed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.breed', verbose_name='Порода')),
                ('kind', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.kindofanimal', verbose_name='Вид животного')),
            ],
            options={
                'verbose_name': 'Карточка советов',
                'verbose_name_plural': 'Карточка советов',
                'ordering': ['kind', 'content'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.animalcard', verbose_name='Карточка животного')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лайк',
                'verbose_name_plural': 'Лайки',
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=100, verbose_name='Отзыв')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.animalcard', verbose_name='Питомец')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
    ]
